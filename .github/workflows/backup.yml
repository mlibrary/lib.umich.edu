#  Name of workflow
name: Production workflow

# When workflow is triggered
on:
  push:
    branches:
      - master
  # schedule:
    # - cron: '0 11 * * MON-FRI'
  repository_dispatch:
    types: [ publish_production ]
  workflow_dispatch:
    inputs:
      tag:
        description: tag
        required: false

# Jobs to carry out
jobs:
  build:
    # Operating system to run job on
    runs-on: ubuntu-latest
    # Environment to run job on
    environment: backup
    # Environment variables
    env:
      DRUPAL_CONCURRENT_FILE_REQUESTS: 20
      DRUPAL_REQUEST_TIMEOUT: 6000000
      DRUPAL_URL: 'https://cms.lib.umich.edu/'
      ROBOTSTXT_MODE: 'production'
    # Steps in job
    steps:
      # Get code from repo
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      # Get tag from action input
      - name: Check that the tag exists
        if: ${{ github.event_name == 'workflow_dispatch' && github.events.inputs.tag }}
        id: tag_check
        run: |
          if git rev-parse 'refs/tags/${{ github.event.inputs.tag }}' &> /dev/null; then
            echo '::set-output name=tag::${{ github.event.inputs.tag }}'
          elif git rev-parse '${{ github.event.inputs.tag }}' &> /dev/null; then
            echo "::set-output name=tag::`git rev-parse '${{ github.event.inputs.tag }}'`"
          else
            echo "Couldn't figure out tag from input: ${{ github.event.inputs.tag }}"
            echo "Aborting deployment."
            false
          fi
      # Checkout tag from repo
      - name: Checkout correct repository
        if: ${{ github.event_name == 'workflow_dispatch'  && github.events.inputs.tag }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}
      # Install NodeJS
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      # Enabling cache
      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-
      # Run npm install and build on our code
      - run: npm install
      - run: npm run build
      # Deploy to s3
      - name: Set s3 bucket credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Copy files to s3
        run: aws s3 sync ./public s3://lib-umich-backup
